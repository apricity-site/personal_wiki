(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{390:function(v,_,t){"use strict";t.r(_);var e=t(46),s=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"从0到1实现ci-cd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从0到1实现ci-cd"}},[v._v("#")]),v._v(" 从0到1实现CI/CD")]),v._v(" "),t("h2",{attrs:{id:"基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[v._v("#")]),v._v(" 基本概念")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("CI")]),v._v(" "),t("p",[t("strong",[v._v("持续构建")]),v._v(" 。负责拉取代码库中的代码后，执行用户预置定义好的操作脚本，通过一系列编译操作构建出一个 "),t("strong",[v._v("制品")]),v._v(" ，并将制品推送至到制品库里面。常用工具有"),t("code",[v._v("Gitlab CI")]),v._v("，"),t("code",[v._v("Github CI")]),v._v("，"),t("code",[v._v("Jenkins")]),v._v("等。这个环节不参与部署，只负责构建代码，然后保存构建物。构建物被称为 制品，保存制品的地方被称为 "),t("strong",[v._v("制品库")])])]),v._v(" "),t("li",[t("p",[v._v("CD")]),v._v(" "),t("p",[t("strong",[v._v("两层含义： 持续部署（Continuous Deployment） 和持续交付（Continuous Delivery）")]),v._v(" 。")]),v._v(" "),t("p",[t("strong",[v._v("持续交付：")]),v._v(" 将制品库的制品拿出后，部署在测试环境 / 交付给客户提前测试。")]),v._v(" "),t("p",[t("strong",[v._v("持续部署：")]),v._v(" 将制品部署在生产环境。")]),v._v(" "),t("p",[t("strong",[v._v("工具：")]),v._v(" Ansible 批量部署， Docker 直接推拉镜像等等。当然也包括我们后面要写到的 Kubernetes 集群部署。")])])]),v._v(" "),t("h2",{attrs:{id:"流程描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#流程描述"}},[v._v("#")]),v._v(" 流程描述")]),v._v(" "),t("p",[t("img",{attrs:{src:"/course/ci-cd/cd-ci.awebp",alt:""}})]),v._v(" "),t("ol",[t("li",[v._v("写完了代码，提交到了 "),t("code",[v._v("Git")]),v._v(" 代码库")]),v._v(" "),t("li",[v._v("随后，代码库配置的 "),t("code",[v._v("WebHook")]),v._v(" 钩子或人工手动启动了 "),t("code",[v._v("Jenkins")]),v._v(" 的构建流程")]),v._v(" "),t("li",[t("code",[v._v("Jenkins")]),v._v(" 启动构建流程。按照你之前配置好的构建脚本，将代码编译成功。")]),v._v(" "),t("li",[v._v("编译成功后，将编译后的文件打包为 "),t("code",[v._v("docker")]),v._v(" 镜像，并将镜像上传到私有镜像库。")]),v._v(" "),t("li",[v._v("随后，使用 "),t("code",[v._v("kubectl")]),v._v(" 指定远程的k8s集群，发送镜像版本更新指令")]),v._v(" "),t("li",[v._v("远程的k8s集群接收到指令后，去镜像库拉取新镜像")]),v._v(" "),t("li",[v._v("镜像拉取成功，按照升级策略（滚动升级）进行升级，此时不会停机。")]),v._v(" "),t("li",[v._v("升级完毕。")])]),v._v(" "),t("h2",{attrs:{id:"学习用服务器推荐方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习用服务器推荐方案"}},[v._v("#")]),v._v(" 学习用服务器推荐方案")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("配置")]),v._v(" "),t("th",[v._v("技术栈")]),v._v(" "),t("th",[v._v("类型")]),v._v(" "),t("th",[v._v("标签")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("2核4G")]),v._v(" "),t("td",[v._v("Jenkins + Nexus + Docker")]),v._v(" "),t("td",[v._v("本地虚拟机 / Cloud")]),v._v(" "),t("td",[v._v("构建机")])]),v._v(" "),t("tr",[t("td",[v._v("2核4G")]),v._v(" "),t("td",[v._v("Docker + Kubernetes")]),v._v(" "),t("td",[v._v("本地虚拟机 / Cloud")]),v._v(" "),t("td",[v._v("Kubernetes Master")])]),v._v(" "),t("tr",[t("td",[v._v("1核1G")]),v._v(" "),t("td",[v._v("Docker + Kubernetes")]),v._v(" "),t("td",[v._v("本地虚拟机 / Cloud")]),v._v(" "),t("td",[v._v("Kubernetes Node")])])])]),v._v(" "),t("h2",{attrs:{id:"目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[v._v("#")]),v._v(" 目录")])])}),[],!1,null,null,null);_.default=s.exports}}]);